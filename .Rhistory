range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
# run a linear model to find slope and offset
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred.list <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
err <- sd(preds)
return(c(pred=pred,sd=err))
})
return(list(predicts=predicts,pred.list))
}
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0)
kpredictn <- function(data,k=10,h=10,n.ahead=5,min.cor=0.5) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
# run a linear model to find slope and offset
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
err <- sd(preds)
return(c(pred=pred,sd=err))
})
return(list(predicts=predicts,pred=pred))
}
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0)
kpredictn <- function(data,k=10,h=10,n.ahead=5,min.cor=0.5) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
# run a linear model to find slope and offset
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
return(list(predicts=predicts,pred=pred))
}
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0)
kpredictn <- function(data,k=10,h=10,n.ahead=5,min.cor=0.5) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
# run a linear model to find slope and offset
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
error <- sum(pred["sd",])
return(list(predicts=predicts,pred=pred,error=error))
}
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0)
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0.8)
kpredictn(data[1:2000,"close"],k=10,h=40,n.ahead=3,min.cor=0.6)
kpredictn(data[1:2000,"close"],k=10,h=30,n.ahead=3,min.cor=0.6)
kpredictn(data[1:2000,"close"],k=10,h=30,n.ahead=3,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=35,h=30,n.ahead=3,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=120,h=30,n.ahead=3,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=500,h=30,n.ahead=3,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=500,h=50,n.ahead=3,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=500,h=50,n.ahead=1,min.cor=0.5)
kpredictn(data[1:2000,"close"],k=500,h=50,n.ahead=1,min.cor=0.8)
kpredictn(data[1:2000,"close"],k=256,h=50,n.ahead=1,min.cor=0.8)
kpredictn(data[1:2000,"close"],k=256,h=120,n.ahead=1,min.cor=0.8)
kpredict <- function(data,hs=seq(10,15),...) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,...))
})
return(plist)
}
kpredictn <- function(data,k=10,h=10,n.ahead=5,min.cor=0.5) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
# run a linear model to find slope and offset
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
error <- sum(pred["sd",])
return(list(predicts=predicts,pred=pred,error=error))
}
kpredict <- function(data,hs=seq(10,15),...) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,...))
})
return(plist)
}
kpredict(data[1:2000,"close"],hs=seq(10,15),k=256,n.ahead=1,min.cor=0.8)
result <- kpredict(data[1:2000,"close"],hs=seq(10,15),k=256,n.ahead=1,min.cor=0.8)
kpredict <- function(data,hs=seq(10,15),...) {
n <- length(data)
plist <- lapply(hs,function(h,...) {
return(kpredictn(data,h=h,...))
},...)
return(plist)
}
result <- kpredict(data[1:2000,"close"],hs=seq(10,15),k=256,n.ahead=1,min.cor=0.8)
result
kpredict <- function(data,hs=seq(10,15),k=256,n.ahead=1,min.cor=0.8) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor))
})
return(plist)
}
result <- kpredict(data[1:2000,"close"],hs=seq(10,15),k=256,n.ahead=1,min.cor=0.8)
result
kpredict <- function(data,hs=seq(10,15),k=256,n.ahead=3,min.cor=0.8) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor))
})
return(plist)
}
kpredictn <- function(data,k=10,h=10,n.ahead=5,min.cor=0.5) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
# run a linear model to find slope and offset
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
error <- sum(pred["sd",])
return(list(predicts=predicts,pred=pred,error=error))
}
kpredict <- function(data,hs=seq(10,15),k=256,n.ahead=3,min.cor=0.8) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor))
})
return(plist)
}
kpredictn(data[1:2000,"close"],k=100,h=50,n.ahead=3,min.cor=0.5)
kpredictn <- function(data,k=100,h=10,n.ahead=3,min.cor=0.5) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
pred <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
error <- sum(pred["sd",])
return(list(predicts=predicts,pred=pred,error=error))
}
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor))
})
return(plist)
}
kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
kpredictn <- function(data,k=100,h=10,n.ahead=3,min.cor=0.5,
output=c("predicts","estimate","error")) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
estimate <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
error <- sum(pred["sd",])
result <- list(predicts=predicts,estimate=estimate,error=error)
return(result[output])
}
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor,
output=c("estimate","error")))
})
return(plist)
}
kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
kpredictn <- function(data,k=100,h=10,n.ahead=3,min.cor=0.5,
output=c("predicts","estimate","error")) {
n <- length(data)
series <- data[(n-h+1):n]
range <- 1:(n-h-n.ahead+1)
cors <- sapply(range,function(i) {
pattern <- data[i:(i+h-1)]
return(cor(pattern,series))
})
abs.cors <- abs(cors)
orders <- order(abs.cors,decreasing=T)
indices <- range[orders<=k & abs.cors>=min.cor]
predicts <- t(sapply(indices,function(i) {
pattern <- data[i:(i+h-1)]
predictor <- data[(i+h):(i+h+n.ahead-1)]
m <- lm(series~pattern)
coeff <- coef(m)
predictor <- coeff[[1]]+coeff[[2]]*predictor
return(predictor)
}))
corsi <- cors[indices]
abs.corsi <- abs(corsi)
estimate <- sapply(1:n.ahead,function(t) {
w <- exp(abs.corsi)
sumw <- sum(w)
preds <- w*predicts[,t]/sumw
pred <- sum(preds)
sd <- sd(preds)
rsd <- sd/abs(pred)
return(c(pred=pred,sd=sd,rsd=rsd))
})
error <- sum(estimate["sd",])
result <- list(predicts=predicts,estimate=estimate,error=error)
return(result[output])
}
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
plist <- lapply(hs,function(h) {
return(kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor,
output=c("estimate","error")))
})
return(plist)
}
kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
plist <- lapply(hs,function(h) {
predict <- kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor,
output=c("estimate","error"))
result <- c(list(h=h),predict)
return(result)
})
return(plist)
}
kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
result <- kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
result[,1]
sapply(1:length(result),function(i)result[[i]]$error)
o <- sapply(1:length(result),function(i)result[[i]]$error)
order(o)
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
g <- length(hs)
groups <- 1:g
plist <- lapply(hs,function(h) {
predict <- kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor)
result <- c(list(h=h),predict)
return(result)
})
errors <- sapply(groups,function(i)plist[[i]]$error)
orders <- order(errors)
result <- plist[[group[[orders==1]]]]
return(result)
}
result <- kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
g <- length(hs)
groups <- 1:g
plist <- lapply(hs,function(h) {
predict <- kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor)
result <- c(list(h=h),predict)
return(result)
})
errors <- sapply(groups,function(i)plist[[i]]$error)
orders <- order(errors)
result <- plist[[groups[[orders==1]]]]
return(result)
}
result <- kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
g <- length(hs)
groups <- 1:g
plist <- lapply(hs,function(h) {
predict <- kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor)
result <- c(list(h=h),predict)
return(result)
})
errors <- sapply(groups,function(i)plist[[i]]$error)
orders <- order(errors)
#result <- plist[[groups[[orders==1]]]]
return(list(errors=errors,orders=orders))
}
result <- kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
result
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
g <- length(hs)
groups <- 1:g
plist <- lapply(hs,function(h) {
predict <- kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor)
result <- c(list(h=h),predict)
return(result)
})
errors <- sapply(groups,function(i)plist[[i]]$error)
orders <- order(errors)
#result <- plist[[groups[orders==1]]]
return(list(errors=errors,orders=orders))
}
result
result <- kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
result
kpredict <- function(data,hs=seq(10,15),k=100,n.ahead=3,min.cor=0.5) {
n <- length(data)
g <- length(hs)
groups <- 1:g
plist <- lapply(hs,function(h) {
predict <- kpredictn(data,h=h,k=k,n.ahead=n.ahead,min.cor=min.cor)
result <- c(list(h=h),predict)
return(result)
})
errors <- sapply(groups,function(i)plist[[i]]$error)
orders <- order(errors)
result <- plist[[groups[orders==1]]]
return(list(errors=errors,orders=orders,pred=result))
}
result <- kpredict(data[1:2000,"close"],hs=seq(100,101),k=100,n.ahead=3,min.cor=0.5)
result
result <- kpredict(data[1:2000,"close"],hs=seq(100,150),k=100,n.ahead=3,min.cor=0.5)
result
result <- kpredict(data[1:2000,"close"],hs=seq(100,150),k=100,n.ahead=3,min.cor=0.5)
result$pred$estimate
data[2001:2003,"close"]
result$pred$estimate["pred",]
mean((result$pred$estimate["pred",]-data[2001:2003,"close"])^2)
result$pred$estimate["pred",]-data[2001:2003,"close"]
result <- kpredict(data[1:2000,"close"],hs=seq(100,120),k=50,n.ahead=1,min.cor=0.5)
result$pred$estimate["pred",]-data[2001:2003,"close"]
mean((result$pred$estimate["pred",]-data[2001:2003,"close"])^2)
result
result$pred$estimate["pred",]-data[2001,"close"]
mean((result$pred$estimate["pred",]-data[2001,"close"])^2)
mean(abs(result$pred$estimate["pred",]-data[2001,"close"]))
result <- kpredict(data[1:2000,"close"],hs=seq(100,120),k=60,n.ahead=7,min.cor=0.5)
result$pred$estimate["pred",]-data[2001:2007,"close"]
mean(abs(result$pred$estimate["pred",]-data[2001:2007,"close"]))
result <- kpredict(data[1:2000,"close"],hs=seq(100,120),k=60,n.ahead=15,min.cor=0.5)
result$pred$estimate["pred",]-data[2001:2015,"close"]
mean(abs(result$pred$estimate["pred",]-data[2001:2015,"close"]))
cor(result$pred$estimate["pred",],data[2001:2015,"close"])
result <- kpredict(data[1:2000,"close"],hs=seq(100,120),k=60,n.ahead=15,min.cor=0.8)
result$pred$estimate["pred",]-data[2001:2015,"close"]
mean(abs(result$pred$estimate["pred",]-data[2001:2015,"close"]))
cor(result$pred$estimate["pred",],data[2001:2015,"close"])
